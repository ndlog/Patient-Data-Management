@model QLBENHNHAN.Models.Validations.TaiKhoanViewModel

@{
    ViewBag.Title = "Trang đăng ký";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/Site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Content/font/fontawesome-free-6.5.2-web/css/all.min.css" asp-append-version="true" />
    @* font *@
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap" rel="stylesheet">
</head>
<body>
    <section class="vh-100">
        <a type="button" href="/home" class="btn-close position-absolute" style="top: 10px; right: 20px;" aria-label="Close"></a>
        <!--Toast-->
        <div class="position-fixed end-0 p-3" style="z-index: 11; top:60px">
            <div class="toast align-items-center text-white" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        @if (TempData["Success"] != null)
                        {
                            @TempData["Success"]
                        }

                        @if (TempData["Error"] != null)
                        {
                            @TempData["Error"]
                        }
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
        <div class="container-fluid h-custom">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1 rounded shadow" style="font-size: 1.2rem; padding: 30px 40px">
                    @using (Html.BeginForm("Register", "Home", null, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.EMAIL, "Email", htmlAttributes: new { @class = "form-label" })<span class="text-danger">*</span>
                            @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control", @name = "EMAIL" } })
                            @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.USERNAME, "Username", htmlAttributes: new { @class = "form-label" })<span class="text-danger">*</span>
                            @Html.EditorFor(model => model.USERNAME, new { htmlAttributes = new { @class = "form-control", @name = "USERNAME" } })
                            @Html.ValidationMessageFor(model => model.USERNAME, "", new { @class = "text-danger" })
                        </div>

                        <!-- Password input -->
                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.PASSWORD, "Password", htmlAttributes: new { @class = "form-label" })<span class="text-danger">*</span>
                            @Html.EditorFor(model => model.PASSWORD, new { htmlAttributes = new { @class = "form-control", @name = "PASSWORD", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.ConfirmPassword, "Nhập lại password", htmlAttributes: new { @class = "form-label" })<span class="text-danger">*</span>
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @name = "ConfirmPassword", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <!-- Checkbox -->
                            <div class="form-check mb-0">
                                <input class="form-check-input me-2" type="checkbox" value="" id="form2Example3" />
                                <label class="form-check-label" for="form2Example3">
                                    Tôi đồng ý với tất cả <a style="cursor: pointer; text-decoration-line: underline; color: blue ">điều khoản dịch vụ</a>
                                </label>
                            </div>
                        </div>

                        <div class="text-center text-lg-start mt-4 pt-2">
                            <input type="submit" class="btn btn-primary btn-lg"
                                   name="btnSubmit" id="btnSubmit"
                                   style="padding-left: 2.5rem; padding-right: 2.5rem;"
                                   value="Đăng ký" />
                            <p class="small fw-bold mt-2 pt-1 mb-0">
                                Bạn đã có tài khoản? <a href="/home/login"
                                                        class="link-danger">Đăng nhập</a>
                            </p>
                        </div>
                    }

                </div>
                <div class="col-md-9 col-lg-6 col-xl-5 d-flex justify-content-center align-items-center">
                    <img src="https://colorlib.com/etc/regform/colorlib-regform-7/images/signup-image.jpg"
                         class="img-fluid" alt="Sample image">
                </div>
            </div>
        </div>
    </section>

</body>
</html>
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Kiểm tra xem có thông báo thành công từ TempData không
            var successMessage = "@TempData["Success"]";
            var errorMessage = "@TempData["Error"]";
            if (successMessage) {
                $('.toast').toast('show');
                $('.toast').addClass('bg-success');
                setTimeout(function () {
                    $('.toast').toast('hide');
                }, 4000);
            }
            else if (errorMessage) {
                $('.toast').toast('show');
                $('.toast').addClass('bg-danger');
                setTimeout(function () {
                    $('.toast').toast('hide');
                }, 4000);
            }
        });

    </script>

    <script>
        $(document).ready(function () {
            $('input[type="text"]').blur(function () {
                // Loại bỏ khoảng trắng trước và sau khi người dùng nhập dữ liệu
                $(this).val($.trim($(this).val()));
            });
        });

    </script>
}

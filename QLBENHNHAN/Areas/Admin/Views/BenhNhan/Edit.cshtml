@model QLBENHNHAN.Models.Validations.BenhNhanViewModel

@{
    ViewBag.Title = "Chỉnh sửa Bệnh Nhân";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <div class="container">
        <div class="row gutters">
            <h1 class="h3 mb-2 ml-2 text-primary">Chỉnh sửa Bệnh Nhân</h1>
            @using (Html.BeginForm("Edit", "BenhNhan", null, FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                    <div class="card h-100">
                        <div class="card-body">
                            <div class="row gutters">
                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                                    <h6 class="mb-2 text-primary">Thông tin cá nhân</h6>
                                </div>
                                @Html.HiddenFor(model => model.MABN)
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group pe-none">
                                        @Html.Label("Mã bệnh nhân", htmlAttributes: new { @class = "control -label" })
                                        @Html.EditorFor(model => model.MABN, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.MABN, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group">
                                        @Html.Label("Họ và tên", htmlAttributes: new { @class = "control -label" })<span class="text-danger">*</span>
                                        @Html.EditorFor(model => model.HOTEN, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.HOTEN, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group">
                                        @Html.Label("Ngày sinh", htmlAttributes: new { @class = "control -label" })<span class="text-danger">*</span>
                                        @Html.EditorFor(model => model.NGAYSINH, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NGAYSINH, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group">
                                        @Html.Label("Giới tính", htmlAttributes: new { @class = "control -label" })<span class="text-danger">*</span>
                                        @Html.DropDownListFor(model => model.GIOITINH, new SelectList(new List<string> { "Nam", "Nữ", "Khác" }), "--Chọn giới tính--", new { @class = "form-select" })
                                        @Html.ValidationMessageFor(model => model.GIOITINH, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group">
                                        @Html.Label("Số điện thoại", htmlAttributes: new { @class = "control -label" })<span class="text-danger">*</span>
                                        @Html.EditorFor(model => model.SODIENTHOAI, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SODIENTHOAI, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group">
                                        @Html.Label("Địa chỉ", htmlAttributes: new { @class = "control-label" })<span class="text-danger">*</span>
                                        @Html.EditorFor(model => model.DIACHI, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DIACHI, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row gutters">
                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                                    <h6 class="mt-3 mb-2 text-primary">Nơi điều trị</h6>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group">
                                        @Html.Label("Tầng", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.PHONG.TANG, new SelectList(new List<string> { "Tầng 1", "Tầng 2", "Tầng 3", "Tầng 4", "Tầng 5" }),
                                        "--Chọn tầng--", new { @class = "form-select", @id = "selectedFloor" })
                                        @Html.ValidationMessageFor(model => model.PHONG.TANG, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12">
                                    <div class="form-group">
                                        @Html.Label("Phòng", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.idP, ViewBag.PhongList as SelectList, "--Chọn phòng--", new { @class = "form-select", @id = "roomDropdown" })
                                        @Html.ValidationMessageFor(model => model.idP, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row gutters">
                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="text-right">
                                        <a class="btn btn-light" href="/Admin/BenhNhan">Trở lại</a>
                                        <button type="submit" class="btn btn-primary">Lưu</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Khi tầng đã chọn thay đổi, hãy cập nhật danh sách thả xuống phòng
            $('#selectedFloor').change(function () {
                var selectedFloor = $(this).val();
                $.ajax({
                    url: '@Url.Action("GetRoomsByFloor", "BenhNhan")',
                    type: 'GET',
                    data: { floor: selectedFloor },
                    success: function (data) {
                        if (data.length > 0) {
                            // Xóa các tùy chọn hiện có và hiển thị danh sách thả xuống
                            $('#roomDropdown').empty().show().append($('<option>', {
                                value: '',
                                text: '--Chọn phòng--'
                            }));
                            // Add new options
                            $.each(data, function (index, room) {
                                $('#roomDropdown').append($('<option>', {
                                    value: room.Value,
                                    text: room.Text
                                }));
                            });
                        } else {
                            // Nếu không còn phòng trống, hãy ẩn menu thả xuống và hiển thị thông báo
                            $('#roomDropdown').hide();
                            alert('Không có phòng sẵn có cho tầng đã chọn.');
                        }
                    },
                    error: function () {
                        alert('Đã xảy ra lỗi khi tìm phòng.');
                    }
                });
            });

            // Đặt phòng được chọn mặc định dựa trên giá trị từ mô hình
            var selectedRoom = '@Html.Raw(Json.Encode(Model.idP))';
            if (selectedRoom !== '') {
                $('#roomDropdown').val(selectedRoom);
            }

            // Kích hoạt sự kiện thay đổi cho danh sách thả xuống tầng đã chọn nếu TENPHONG đã có dữ liệu
            var selectedFloor = $('#selectedFloor').val();
            if (selectedFloor !== '') {
                $('#selectedFloor').change();
            }

            // Kiểm tra nếu tầng chưa được chọn, ẩn dropdown phòng
            var selectedFloor = $('#selectedFloor').val();
            if (selectedFloor === '') {
                $('#roomDropdown').hide();
            }
        });
    </script>
</body>
</html>
